services:
  databasehandler:
    build:
      context: ./middleware/databaseHandler
    depends_on:
      - mongodb
    networks:
      - backend

  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - backend

  mosquitto:
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/public/config:/mosquitto/config
      - ./mosquitto/public/data:/mosquitto/data
      - ./mosquitto/public/log:/mosquitto/log
    networks:
      - backend

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - patientserver
    networks:
      - backend

  patientserver:
    build:
      context:
        ./middleware/patientserver
    deploy:
      replicas: 3
    restart:
      always
    networks:
      - backend

  slotavavailabilityservice:
    build:
      context:
       ./middleware/slotAvailability
    depends_on:
      - mosquitto
    restart:
      always
    networks:
      - backend

  dentistapiserver:
    build:
      context: 
        ./middleware/dentistapiserver
    deploy:
      replicas: 3
    networks:
      - backend

  slotservice:
    build:
      context:
        ./middleware/slotservice
    networks:
      - backend
    restart: always

  scheduleservice:
    build:
      context:
        ./middleware/scheduleservice
    networks:
      - backend

  mosquittopatient:
    image: eclipse-mosquitto:latest
    ports:
      - "1884:1884"
    volumes:
      - ./mosquitto/patient/config:/mosquitto/config
      - ./mosquitto/patient/data:/mosquitto/data
      - ./mosquitto/patient/log:/mosquitto/log
    networks:
      - backend

  mosquittodentist:
    image: eclipse-mosquitto:latest
    ports:
      - "1885:1885"
    volumes:
      - ./mosquitto/dentist/config:/mosquitto/config
      - ./mosquitto/dentist/data:/mosquitto/data
      - ./mosquitto/dentist/log:/mosquitto/log
    networks:
      - backend

  notificationservice:
    build:
      context:
        ./middleware/notificationService
    networks:
      - backend

volumes:
  mongodb_data:

networks:
  backend:
    driver: bridge