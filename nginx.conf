events {
    # Sets max number of concurrent connections for nginx
    worker_connections 1024;
}

http {

    # Define the backend for patient servers
    upstream patient_backend {
        least_conn;
        
        # Uses Docker's DNS resolution
        # This will automatically detect all instances of the patient-server service
        resolver 127.0.0.11 valid=30s;
        server patientserver:3001;
    }

    # Define the backend for dentist servers
    upstream dentist_backend {
        least_conn;

        # Docker's DNS resolution
        resolver 127.0.0.11 valid=30s;
        server dentistapiserver:3000;
    }

    server {
        # Listens for HTTP traffic on port 80
        listen 80;

        # Proxy requests to the patient server backend
        location /api/patient/ {
            proxy_pass http://patient_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy requests to the dentist server backend
        location /api/dentist/ {
            proxy_pass http://dentist_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}